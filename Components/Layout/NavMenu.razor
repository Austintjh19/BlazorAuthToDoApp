@using System.Security.Claims
@using BlazorCascadingAuth.Data
@using BlazorCascadingAuth.Models
@using Microsoft.EntityFrameworkCore
@inject AppDbContext dbContext


<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">ToDoApp</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
            </NavLink>
        </div>

        <AuthorizeView Roles="Admin, User">
            <Authorized>
                 <div class="nav-item px-3">
                    <NavLink class="nav-link" href="counter">
                        <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> Counter
                    </NavLink>
                </div>

            </Authorized>
        </AuthorizeView>

        
        <AuthorizeView Roles="Admin">
            <Authorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="weather">
                        <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Weather
                    </NavLink>
                </div>
            </Authorized>
        </AuthorizeView>

        <AuthorizeView>
            <NotAuthorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="/login">
                        <span class="bi" aria-hidden="true"></span> Login
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="/sign-up">
                        <span class="bi" aria-hidden="true"></span> Sign Up
                    </NavLink>
                </div>
            </NotAuthorized>
            <Authorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="/user-account">
                        <span class="bi" aria-hidden="true"></span> @currentUser!.Username
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="/logout">
                        <span class="bi" aria-hidden="true"></span> Logout
                    </NavLink>
                </div>
            </Authorized>
        </AuthorizeView>
    </nav>
</div>

@code {
    [CascadingParameter]
    private Task<AuthenticationState>? authenticationStateTask {get; set;}

    private User? currentUser;

    protected override async Task OnInitializedAsync() {
        await base.OnInitializedAsync();
        
        var authenticationState = await authenticationStateTask!;
        var userIdClaim = authenticationState.User.FindFirst(ClaimTypes.NameIdentifier)?.Value; 
        if (!string.IsNullOrEmpty(userIdClaim)) {
            var userId = int.Parse(userIdClaim);
            currentUser = await dbContext.Users.Include(u => u.ToDos).FirstOrDefaultAsync(u => u.Id == userId);
        }
    }
}